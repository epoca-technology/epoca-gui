



// Service
export interface ISignalService {
    getPolicies(): Promise<IPredictionCancellationPolicies>,
    updatePolicies(policies: IPredictionCancellationPolicies, otp: string): Promise<void>
}








/**
 * Prediction Cancellation Policy Item
 * A policy includes a series of items (mostly market state) which can be
 * configured in order to neutralize non-neutral predictions generated by
 * the Epoch Model.
 * This functionality is optional as all the items in a policy can be 
 * "IGNORE" and threfore just follow the Epoch Model.
 */
export type IPredictionCancellationPolicyItemState = 
// Technical Analysis
"STRONG_BUY"|"STRONG_SELL"|

// Remaining Market State
"INCREASING"|"DECREASING"|

// Skip Evaluation
"IGNORE";



/**
 * Prediction Cancellation Policy
 * When a non-neutral prediction is generated, it is evaluated against
 * the cancellation policy. If they are all met, the prediction is
 * neutralized. Otherwise, it is maintained and broadcasted.
 */
export interface IPredictionCancellationPolicy {
    // Technical Analysis
    ta_30m: IPredictionCancellationPolicyItemState,
    ta_2h: IPredictionCancellationPolicyItemState,
    ta_4h: IPredictionCancellationPolicyItemState,
    ta_1d: IPredictionCancellationPolicyItemState,

    // Market State
    window: IPredictionCancellationPolicyItemState,
    volume: IPredictionCancellationPolicyItemState,
    network_fee: IPredictionCancellationPolicyItemState,
    open_interest: IPredictionCancellationPolicyItemState,
    long_short_ratio: IPredictionCancellationPolicyItemState,
}



/**
 * Cancellation Policies
 * Long and Short predictions can have tailored policies in order 
 * increase the accuracy of the model as much as possible.
 */
export interface IPredictionCancellationPolicies {
    LONG: IPredictionCancellationPolicy,
    SHORT: IPredictionCancellationPolicy
}